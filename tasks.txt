По дз:
1 - Написать скрипт для суммирования чисел в массиве
Прим. есть массив чисел
const numbers = [10, 25, 100];
На выходе должны получить переменную, в которой будет содержаться сумма этих чисел (135), скрипт должен игнорировал другие типы данных.

2 - Создать массив объектов для юзеров.
Прим. [{name: ‘Ivan’, age: 18}, {name: ‘Petr’, age: 12}, {name: ‘Sidor’, age: 25}, {...}, ...]
На выходе отдавать два массива. Первый с совершеннолетними пользователями, второй с несовершеннолетними.

3 - Создать массив объектов, data = [{ firstName: 'Ashton', lastName: 'Kutcher', age: 40}, ... ]; ( от 5 и более значений ).
Выведем окно prompt, в которое необходимо будет ввести фамилию пользователя; Написать инструкцию поиска по массиву data, с введенными в prompt данными;
Если есть совпадение - вывести все данные этого пользователя в altert, если совпадения не произошло вывести alert с ошибкой:  “No results found for your request”
Поиск производится без учета регистра.

4 - Есть исходный массив строк ['a', 'b', 'c'], данные могут повторятся, нужно собрать объект, у которого свойства будут состоять из строк, а значения этих свойств будет количество повторений в массиве.
Пример: ['a', 'b', 'c', 'a', 'v', 'v', 'v'] => { a: 2, b: 1, c: 1, v: 3}


5  - Нужно реализовать функции получения значения из объекта. Входные параметры функции ( объект, строка пути )
  const obj = {
    a: {
      b: {
        c: 'd'
      },
      e: 'f'
    }
  };
  примеры:
  getProperty( obj, 'a.b.c' ) -> 'd'
  getProperty( obj, 'a.b' ) -> { c : 'd' }
  getProperty( obj, 'a.x.e' ) -> undefined


6 - есть массив чисел, нужно реализовать функцию, которая в этом массиве находит 2 максимальных числа
( за один проход по массиву )


7 - есть массив чисел, нужно реализовать функцию которая вернет промежутки между числами
    пример:
    const arr = [1, 3, 5, 2, 8, 9, 10, 12];
    getRange( arr ) -> '1-3, 5, 8-10, 12'



8 - у нас есть рассписание
    const data = [
      ['A', 'mon', '10'],
      ['A', 'mon', '10'],
      ['B', 'wed', '14'],
      ['C', 'mon', '13'],
      ['B', 'sut', '14'],
      ['D', 'mon', '11'],
      ['A', 'twu', '9'],
      ['C', 'mon', '10'],
      ['C', 'fri', '20'],
      ['D', 'mon', '32'],
      ['A', 'wed', '5']
    ];
    Первый элемент в массиве - название класса, второй - это день недели и третий время дня
    Нужно реализовать функцию, которая возвращает объект, в котором сгруппированы дни недели,
    по дням недели сгрупированы классы и время в них

    getSchedual( data ) ->
    {
      mon: { A: [ '10', '10' ], C: [ '13', '10' ], 😧 [ '11', '32' ] },
      wed: { B: [ '14' ], A: [ '5' ] },
      sut: { B: [ '14' ] },
      twu: { A: [ '9' ] },
      fri: { C: [ '20' ] }
    }

9 - const simple = [1, 2, 3, [4, 5, 6], [7, 8, 9]];
    const medium = [1, 2, 3, [4, 5, 6, [7, 8, 9]]];
    const hard = [1, 2, 3, [4, 'str', 6, [7, 'str', 9]]];
    // arr -> [1, 2, 3, 4, 5, 6, 7, 8, 9];
